Variables
1. What is a variable? Why might a programmer use a variable?
   variable is a way to store data in ruby - useful for storing large pieces of data, or for instances when we need to gather data from the user


2. If the value of first_name is "Abraham" and last_name is "Lincoln", explain the order in which Ruby will run the line full_name = first_name + last_name, and what the final result will be.
  Ruby will first add the first name and last name, the result will be AbrahamLincoln, but this will not print in your repl unless you ask for puts or p full_name, the equation as it currently is is just telling the computer info, not printing

Data Types
3. For each of the following data types, write a short definition and give at least one example of when you might use the data type in a program. (Don't use an example we've already provided.)

string - words! "This is a string" "Also" "These" "Are strings" "5"
integer - whole numbers 2 77 2930
float - this is a number 4.0 or 56.983
nil - container, for nothing,
booleanm - simply true/false

Algorithms
4. What is an algorithm?
  An algorithm is steps telling a computer to perform a certain task

5. What are two common categories of algorithm in computer science? 
  search and sort

Methods
6. What is a method? Why might a programmer choose to use a method?
  A method is a procedure that is self contained and object oriented

7. Define the following terms as they relate to a method. 

return value - value that is returned from method
side effect
parameter - similar to argument, when estabilishing method
argument - not all methods have argurments, method(argument goes here) when calling method
implicit return - value that is returned but not printed

8. What are global scope and method scope? How do those scopes impact the availability of data at different points in a program?
  global scope is within the entire program and available throughout, method scope is local to that method and only available within that method.

Control Flow
9. What is control flow? Why might a programmer choose to use flow control?
  control flow allows for flexibility and gives different outcomes based on the information from the user or other results or values.  Programmers might use control flow to account for the different types of users or different options within a program they've written.  Like at the end of a game there could be one screen for a winner and another for a loser, or setting up an iphone.

10. Define the following terms as they relate to flow control.

loop - think of a circle, or walking around on a track, once you finish, you will start again
if - conditional statment - if x is true then y
else - after an if statement, basically a catch-all for remainders
elsif - you can add elsif for multiple conditional statements
while - while something is true/false, do something specific
until - until or up to a certain thing is true/false, do something